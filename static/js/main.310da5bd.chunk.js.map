{"version":3,"sources":["States/index.ts","components/PhotosList.tsx","components/SearchForm.tsx","includes/Footer.tsx","App.tsx","global.tsx","index.tsx"],"names":["searchFormState","atom","key","default","query","listState","loadingState","errorState","PhotosList","useRecoilState","searchForm","list","error","loading","hits","length","undefined","Row","totalHits","Error","map","item","i","ImageCol","data-lightbox","href","largeImageURL","src","webformatURL","alt","className","NoData","styled","div","SearchForm","setLoading","setList","setError","setSearchForm","GetImages","image","a","axios","url","data","message","InputRow","Col","Input","id","name","placeholder","value","onChange","e","target","input","Footer","defaults","baseURL","headers","App","Container","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAGaA,EAAkBC,YAAiB,CAC9CC,IAAK,kBACLC,QAAS,CACPC,MAAO,MAIEC,EAAYJ,YAAmB,CAC1CC,IAAK,YACLC,QAAS,OAGEG,EAAeL,YAAc,CACxCC,IAAK,eACLC,SAAS,IAGEI,EAAaN,YAAa,CACrCC,IAAK,aACLC,QAAS,K,cC0BIK,EA5CI,WACjB,MAAqBC,YAAeT,GAA7BU,EAAP,oBACA,EAAeD,YAAeJ,GAAvBM,EAAP,oBACA,EAAgBF,YAAeF,GAAxBK,EAAP,oBACA,EAAkBH,YAAeH,GAA1BO,EAAP,oBAEA,OACE,iCACyB,KAAlB,OAAJF,QAAI,IAAJA,OAAA,EAAAA,EAAMG,KAAKC,cACUC,KAAlB,OAAJL,QAAI,IAAJA,OAAA,EAAAA,EAAMG,KAAKC,SACU,KAArBL,EAAWN,MACT,GAEA,qCACE,+CADF,WACyBO,QADzB,IACyBA,OADzB,EACyBA,EAAMG,KAAKC,UAGtC,cAACE,EAAD,UACGP,EAAWN,MACVO,GAAQA,EAAKO,UAAY,EACvBN,EACE,cAACO,EAAD,UAAQP,IACNC,EACFF,EAAKG,KAAKM,KAAI,SAACC,EAAMC,GAAP,OACZ,cAACC,EAAD,UACE,mBAAGC,gBAAc,YAAYC,KAAMJ,EAAKK,cAAxC,SACE,qBAAKC,IAAKN,EAAKO,aAAcC,IAAI,QAFtBP,MAOjB,qBAAKQ,UAAU,YAGjB,cAACC,EAAD,4CAGF,SASJZ,EAAQa,IAAOC,IAAV,gEAKLV,EAAWS,IAAOC,IAAV,yOAeRF,EAASC,IAAOC,IAAV,4LAWNhB,EAAMe,IAAOC,IAAV,uQ,uCCvBMC,EArDI,WACjB,MAAuBzB,YAAeH,GAA7B6B,EAAT,oBACA,EAAoB1B,YAAeJ,GAA1B+B,EAAT,oBACA,EAAqB3B,YAAeF,GAA3B8B,EAAT,oBACA,EAAoC5B,YAAeT,GAAnD,mBAAOU,EAAP,KAAmB4B,EAAnB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAEdN,GAAW,GAFG,SAISO,IAAM,CAC3BC,IACE,6CACAH,EACA,kCARU,gBAINI,EAJM,EAINA,KAMRR,EAAQQ,GAVM,gDAYdP,EAAS,KAAIQ,SAZC,yBAcdV,GAAW,GAdG,4EAAH,sDA6Bf,OACE,mCACE,cAACW,EAAD,UACE,cAACC,EAAD,UACE,cAACC,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,YAAY,YACZC,MAAO1C,EAAWN,MAClBiD,SApBI,SACZC,GAEAhB,GACEA,EAAc,2BACT5B,GADQ,kBAEV4C,EAAEC,OAAOL,KAAOI,EAAEC,OAAOH,SAE9Bb,EAAUe,EAAEC,OAAOH,QAaXzC,KAAK,gBAUXmC,EAAWd,IAAOC,IAAV,8JAWRc,EAAMf,IAAOC,IAAV,8LAWHe,EAAQhB,IAAOwB,MAAV,koBC1EIC,EARA,WACb,OACE,iCACE,0DCGNf,IAAMgB,SAASC,QAAU,2BACzBjB,IAAMgB,SAASE,QAAQ,gBAAkB,mBAEzC,I,EAaeC,EAbH,WACV,OACE,mCACE,eAACC,EAAD,WACE,gDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UAQFA,EAAY9B,IAAOC,IAAV,yFCtBA8B,cAAf,o3B,yCCKAC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,EAAD,WAINC,SAASC,eAAe,W","file":"static/js/main.310da5bd.chunk.js","sourcesContent":["import { atom } from \"recoil\";\r\nimport { IList, SearchForm } from \"typings\";\r\n\r\nexport const searchFormState = atom<SearchForm>({\r\n  key: \"searchFormState\",\r\n  default: {\r\n    query: \"\",\r\n  },\r\n});\r\n\r\nexport const listState = atom<IList | null>({\r\n  key: \"listState\",\r\n  default: null,\r\n});\r\n\r\nexport const loadingState = atom<boolean>({\r\n  key: \"loadingState\",\r\n  default: false,\r\n});\r\n\r\nexport const errorState = atom<string>({\r\n  key: \"errorState\",\r\n  default: \"\",\r\n});\r\n","import { useRecoilState } from \"recoil\";\r\nimport { errorState, listState, loadingState, searchFormState } from \"States\";\r\nimport styled from \"styled-components\";\r\n\r\nconst PhotosList = () => {\r\n  const [searchForm] = useRecoilState(searchFormState);\r\n  const [list] = useRecoilState(listState);\r\n  const [error] = useRecoilState(errorState);\r\n  const [loading] = useRecoilState(loadingState);\r\n\r\n  return (\r\n    <main>\r\n      {list?.hits.length === 0 ||\r\n      list?.hits.length === undefined ||\r\n      searchForm.query === \"\" ? (\r\n        \"\"\r\n      ) : (\r\n        <>\r\n          <b>Results found:</b> {list?.hits.length}\r\n        </>\r\n      )}\r\n      <Row>\r\n        {searchForm.query ? (\r\n          list && list.totalHits > 0 ? (\r\n            error ? (\r\n              <Error>{error}</Error>\r\n            ) : loading ? (\r\n              list.hits.map((item, i: number) => (\r\n                <ImageCol key={i}>\r\n                  <a data-lightbox=\"mygallery\" href={item.largeImageURL}>\r\n                    <img src={item.webformatURL} alt=\"\" />\r\n                  </a>\r\n                </ImageCol>\r\n              ))\r\n            ) : (\r\n              <div className=\"spinner\"></div>\r\n            )\r\n          ) : (\r\n            <NoData>No images found! ðŸ˜”</NoData>\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Row>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PhotosList;\r\n\r\nconst Error = styled.div`\r\n  color: red;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst ImageCol = styled.div`\r\n  padding: 0;\r\n  overflow: hidden;\r\n  border: 1px solid black;\r\n  border-radius: 50%;\r\n  margin: 10px;\r\n  transition: 0.3s;\r\n\r\n  img {\r\n    max-width: 100%;\r\n    height: 100%;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n\r\nconst NoData = styled.div`\r\n  grid-column-start: 3;\r\n  grid-column-end: 5;\r\n  transition: 0.3s;\r\n\r\n  @media (max-width: 1900px) {\r\n    grid-column-start: 1;\r\n    grid-column-end: 5;\r\n  }\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  transition: 0.3s;\r\n\r\n  @media (max-width: 1900px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n  }\r\n\r\n  @media (max-width: 560px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { errorState, listState, loadingState, searchFormState } from \"States\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SearchForm = () => {\r\n  const [, setLoading] = useRecoilState(loadingState);\r\n  const [, setList] = useRecoilState(listState);\r\n  const [, setError] = useRecoilState(errorState);\r\n  const [searchForm, setSearchForm] = useRecoilState(searchFormState);\r\n\r\n  const GetImages = async (image: string) => {\r\n    try {\r\n      setLoading(true);\r\n\r\n      const { data } = await axios({\r\n        url:\r\n          \"?key=18269871-9984b5717c4bef14378a76910&q=\" +\r\n          image +\r\n          \"&image_type=photo&pretty=true\",\r\n      });\r\n      setList(data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const typer = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setSearchForm &&\r\n      setSearchForm({\r\n        ...searchForm,\r\n        [e.target.name]: e.target.value,\r\n      });\r\n    GetImages(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputRow>\r\n        <Col>\r\n          <Input\r\n            id=\"query\"\r\n            name=\"query\"\r\n            placeholder=\"Type here\"\r\n            value={searchForm.query}\r\n            onChange={typer}\r\n            list=\"bros\"\r\n          />\r\n        </Col>\r\n      </InputRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchForm;\r\n\r\nconst InputRow = styled.div`\r\n  display: grid;\r\n  width: 40%;\r\n  margin: 0 auto;\r\n  transition: 0.3s;\r\n\r\n  @media (max-width: 1900px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Col = styled.div`\r\n  margin-top: 30px;\r\n  transition: 0.3s;\r\n\r\n  @media (min-width: 900px) and (max-width: 1900px) {\r\n    display: grid;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  min-height: calc(1.5em + 0.75rem + 2px);\r\n  padding: 0.375rem 0.75rem;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  color: #495057;\r\n  background-color: #fff;\r\n  background-clip: padding-box;\r\n  border: 1px solid gray;\r\n  appearance: none;\r\n  border-radius: 0.25rem;\r\n  margin-bottom: 10px;\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  transition: 0.3s;\r\n\r\n  &:focus {\r\n    border-color: #0275d8;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px lightblue;\r\n    outline: 0 none;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\n","const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <i>Created by Fadi Hanna.</i>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport PhotosList from \"components/PhotosList\";\r\nimport SearchForm from \"components/SearchForm\";\r\nimport Footer from \"includes/Footer\";\r\nimport styled from \"styled-components\";\r\n\r\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\r\naxios.defaults.headers[\"Content-Type\"] = \"application/json\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>PixaBay Finder</h1>\r\n        <SearchForm />\r\n        <PhotosList />\r\n        <Footer />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  margin: 10px;\r\n  text-align: center;\r\n  transition: 0.3s;\r\n`;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  * \r\n  {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    outline: 0;\r\n    font-size: 100%;\r\n    transition: 0.3s;\r\n  }\r\n\r\n  .spinner:after {\r\n    content: \"\";\r\n    box-sizing: border-box;\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 50%;\r\n    height: 60px;\r\n    width: 60px;\r\n    margin-top: -30px;\r\n    margin-left: -30px;\r\n    border-radius: 50%;\r\n    border: 3px solid lightgray;\r\n    border-top-color: #0275d8;\r\n    animation: spinner 0.7s linear infinite;\r\n  }\r\n\r\n  @keyframes spinner {\r\n    to {\r\n      transform: rotate(360deg);  \r\n      transition: 0.3s;\r\n    }\r\n  }\r\n\r\n\r\n  img\r\n  {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    height: auto;\r\n    transition: 0.3s;\r\n  }\r\n\r\n  @media (max-width: 1500px)\r\n  {\r\n    body\r\n    {\r\n      margin: 0;\r\n      padding: 0;\r\n      font-size: 100%;\r\n      width: 100%;\r\n    }\r\n\r\n  }\r\n\r\n`;\r\n","import App from \"App\";\r\nimport GlobalStyles from \"global\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <GlobalStyles />\r\n      <RecoilRoot>\r\n        <App />\r\n      </RecoilRoot>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}